name: "Terraform Plan"

# Trigger when a pull request is received
on:
  push:
    branches: [ staging ]

jobs:
  terraform-plan:
    name: "Terraform Plan"
    runs-on: ubuntu-latest
    steps:
      # Checkout the code
      # Marketplace: https://github.com/marketplace/actions/checkout
      - name: "Setup - Checkout"
        uses: actions/checkout@v2.1.0

#      - name: "Setup - Security Scan"
#        uses: triat/terraform-security-scan@v1
#        env:
#          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      # Provides AWS credentials to Terraform
      # By default, Terraform checks the home directory for a .aws folder with a credential file
      # Documentation: https://docs.aws.amazon.com/ses/latest/DeveloperGuide/create-shared-credentials-file.html
      - name: "Setup - Build AWS Credentials"
        run: |
          mkdir -p ~/.aws
          echo "[default]" > ~/.aws/credentials
          echo "aws_access_key_id = ${{ secrets.AWS_ACCESS_KEY_ID }}" >> ~/.aws/credentials
          echo "aws_secret_access_key = ${{ secrets.AWS_SECRET_ACCESS_KEY }}" >> ~/.aws/credentials
          export a=abc
      # Downloads a specific version of Terraform CLI and adds it to PATH
      # Marketplace: https://github.com/marketplace/actions/hashicorp-setup-terraform
      - name: "Setup - Terraform CLI"
        uses: hashicorp/setup-terraform@v1
        with:
            terraform_version: 0.13.5

      # Init pulls credentials from the .aws/credentials file by default
      - name: "Run - Terraform Init"
        run: cd deploy/${GITHUB_REF##*/} && terraform init -input=false -backend-config=\"bucket=solvejobs-tfstates\" -backend-config=\"prefix=${GITHUB_REF##*/}\"

      # The id value is used for reference in the comment step via "steps.plan.outputs.stdout"
      # Note: Color is disabled to prevent messy characters from appearing in the pull request comment
      - name: "Run - Terraform Plan"
        id: plan
        run: |
            cd deploy/${GITHUB_REF##*/}
            terraform plan -input=false -no-color && terraform apply -auto-approve -var-file=tfvars/${GITHUB_REF##*/}.tfvars && echo $a
